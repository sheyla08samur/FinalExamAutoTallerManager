version: '3.9'

# Red interna para los servicios
networks:
  autotaller_net:
    driver: bridge
    name: autotaller_net

# Volumen para persistir los datos de la base de datos
volumes:
  autotaller_data:

    # Definición de servicios
services:
  db:
    # Imagen oficial de PostgreSQL
    image: postgres:16
    # Nombre del contenedor
    container_name: autotaller_db
    restart: always
    # Variables de entorno para configurar la base de datos
    environment:
      POSTGRES_DB: autotallerdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    # Mapeo de puertos 
    # Así puedes conectarte desde DBeaver con:
    #   Host: localhost
    #   Port: 5434
    #   Database: autotallerdb
    #   User: postgres
    #   Password: postgres
    ports:
      - "5434:5432" # Puerto externo 5434 -> interno 5432
    # Volumen para persistir los datos
    volumes:
      - autotaller_data:/var/lib/postgresql/data
    # Healthcheck para asegurarnos de que la base de datos está lista antes de que otros servicios intenten conectarse
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d autotallerdb" ]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s # Tiempo de espera inicial antes de comenzar las comprobaciones
    # Conexión a la red interna
    networks:
      - autotaller_net

  api:
    # Construcción del contenedor desde el Dockerfile del proyecto API
    build:
      context: ..
      dockerfile: AutoTallerManager.API/Api.Dockerfile
    container_name: autotaller_api
    restart: always
    # La API esperará a que la base de datos esté saludable
    depends_on:
      db:
        condition: service_healthy
    # Variables de entorno para la aplicación
    environment:
      # Variable para detectar que estamos en Docker
      DOTNET_RUNNING_IN_CONTAINER: "true"
      # entorno de desarrollo
      ASPNETCORE_ENVIRONMENT: "Development"
      # Puerto en el que la aplicación escuchará dentro del contenedor
      ASPNETCORE_HTTP_PORTS: "8080"
      ConnectionStrings__PostgresDocker: "Host=autotaller_db;Port=5432;Database=autotallerdb;Username=postgres;Password=postgres" # Mapeo de puertos
    ports:
      - "8081:8080"
    # Conexión a la red interna
    networks:
      - autotaller_net

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: autotaller_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - autotaller_net
