// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/dotnet
{
	"name": "C# (.NET)",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/dotnet:1-9.0-bookworm",
	"features": {
		"ghcr.io/devcontainers/features/dotnet:2": {}
	},

	"postCreateCommand": "dotnet tool install --global dotnet-ef && echo 'export PATH=$PATH:/root/.dotnet/tools' >> ~/.bashrc",

	  // Conectar a la red de Docker y agregar el host
		"runArgs": [
			"--network=autotaller_net"
		],
		
		"containerEnv": {
		"REMOTE_CONTAINERS": "true"
		},
		
		// Reenviar puertos para acceso local
		"forwardPorts": [5433, 8081, 8080],

	// Configuraci√≥n de puertos
	"portsAttributes": {
		"5433": {
		"label": "PostgreSQL",
		"onAutoForward": "notify"
		},
		"8081": {
		"label": "API",
		"onAutoForward": "notify"
		},
		"8080": {
		"label": "pgAdmin",
		"onAutoForward": "notify"
		}
	}

	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [5000, 5001],
	// "portsAttributes": {
	//		"5001": {
	//			"protocol": "https"
	//		}
	// }

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "dotnet restore",

	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
	
}
